#!/bin/bash
# based on 
# https://github.com/Nyr/wireguard-install
#
# Copyright (c) 2020 Nyr. Released under the MIT License.
# Copyright (c) Changes 2022 David Klein. Released under the MIT License.

help()  {
    echo "

	Usage: wireguard_user -o --option

	options:[ -u | --user ]
		[ -d | --del  ]
		[ -a | --add  ]
		[ -l | --list ]
                [ -h | --help ]

	examples: wireguard_user -u MyUserName -a
			-> creates a user
			-> output: user.config file

		 wireguard_user -u MyUserName -a
			-> deletes a user
			-> output: user xyz deleted or user xyz not found

	 	 wirguard_user -l
			-> output: list of all users

"
    exit 2
}


check_install()	{
	# Detect Debian users running the script with "sh" instead of bash
	if readlink /proc/$$/exe | grep -q "dash"; then
		echo 'This installer needs to be run with "bash", not "sh".'
		exit
	fi

	# Detect environments where $PATH does not include the sbin directories
	if ! grep -q sbin <<< "$PATH"; then
		echo '$PATH does not include sbin. Try using "su -" instead of "su".'
		exit
	fi

	# Are you root?
	if [[ "$EUID" -ne 0 ]]; then
		echo "This needs to be run with superuser privileges."
		exit
	fi

	# is there a wirguard config? 
	if [[ ! -e /etc/wireguard/wg0.conf ]]; then
		clear
		echo 'Please install WireGuard with road warrior installer first!'
		exit
	fi

	# TODO: can i find all dependies? 
	

}




new_client_setup () {

	# Locate the proper resolv.conf
	# Needed for systems running systemd-resolved
	if grep -q '^nameserver 127.0.0.53' "/etc/resolv.conf"; then
		resolv_conf="/run/systemd/resolve/resolv.conf"
	else
		resolv_conf="/etc/resolv.conf"
	fi
	# Extract nameservers and provide them in the required format
	dns=$(grep -v '^#\|^;' "$resolv_conf" | grep '^nameserver' | grep -oE '[0-9]{1,3}(\.[0-9]{1,3}){3}' | xargs | sed -e 's/ /, /g')

	# Given a list of the assigned internal IPv4 addresses, obtain the lowest still
	# available octet. Important to start looking at 2, because 1 is our gateway.
	octet=2
	while grep AllowedIPs /etc/wireguard/wg0.conf | cut -d "." -f 4 | cut -d "/" -f 1 | grep -q "$octet"; do
		(( octet++ ))
	done
	# Don't break the WireGuard configuration in case the address space is full
	if [[ "$octet" -eq 255 ]]; then
		echo "253 clients are already configured. The WireGuard internal subnet is full!"
		exit
	fi
	key=$(wg genkey)
	psk=$(wg genpsk)
	# Configure client in the server
	cat << EOF >> /etc/wireguard/wg0.conf
# BEGIN_PEER $client
[Peer]
PublicKey = $(wg pubkey <<< $key)
PresharedKey = $psk
AllowedIPs = 10.7.0.$octet/32$(grep -q 'fddd:2c4:2c4:2c4::1' /etc/wireguard/wg0.conf && echo ", fddd:2c4:2c4:2c4::$octet/128")
# END_PEER $client
EOF
	# Create client configuration
	# cat << EOF > ~/"$client".conf
	cat << EOF 
[Interface]
Address = 10.7.0.$octet/24$(grep -q 'fddd:2c4:2c4:2c4::1' /etc/wireguard/wg0.conf && echo ", fddd:2c4:2c4:2c4::$octet/64")
DNS = $dns
PrivateKey = $key

[Peer]
PublicKey = $(grep PrivateKey /etc/wireguard/wg0.conf | cut -d " " -f 3 | wg pubkey)
PresharedKey = $psk
AllowedIPs = 0.0.0.0/0, ::/0
Endpoint = $(grep '^# ENDPOINT' /etc/wireguard/wg0.conf | cut -d " " -f 3):$(grep ListenPort /etc/wireguard/wg0.conf | cut -d " " -f 3)
PersistentKeepalive = 25
EOF

# Append new client configuration to the WireGuard interface
	wg addconf wg0 <(sed -n "/^# BEGIN_PEER $client/,/^# END_PEER $client/p" /etc/wireguard/wg0.conf)
}



# readings Args 
SHORT=u:,a,d,h,l
LONG=user:,add,del,help,list
OPTS=$(getopt -a -n wireguard_user --options $SHORT --longoptions $LONG -- "$@")

eval set -- "$OPTS"

while :
do
  case "$1" in
    -u | --user )
      USERNAME="$2"
      shift 2
	  # Allow a limited set of characters to avoid conflicts
	  client=$(sed 's/[^0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-]/_/g' <<< "$USERNAME")
      ;;
    -a | --add )
      ADD=true
	  new_client_setup
	shift 1
	;;
    -d | --del )
      DEL=true
	echo "del"
	shift 1
      ;;
    -h | --help)
      help
      exit 2
      ;;
    --)
      shift;
      break
      ;;
    *)
      echo "error: Unexpected option: $1"
      break
      ;;
  esac
done

	
	



